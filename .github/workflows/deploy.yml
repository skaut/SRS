name: deploy

on:
  push:
    branches:
      - master

jobs:
  deploy-srs:
    name: "Deploy to srs.skauting.cz"
    runs-on: ubuntu-18.04
    container:
      image: fmasa/lebeda:8.0
    env:
      CONFIG_DATABASE_HOST: localhost
      CONFIG_DATABASE_NAME: srs
      CONFIG_DATABASE_PASSWORD: ${{ secrets.SRS_CONFIG_DATABASE_PASSWORD }}
      CONFIG_DATABASE_USER: srs
      CONFIG_MAIL_HOST:
      CONFIG_MAIL_PASSWORD:
      CONFIG_MAIL_PORT: 0
      CONFIG_MAIL_SECURE:
      CONFIG_MAIL_SMTP: false
      CONFIG_MAIL_USERNAME:
      CONFIG_SKAUTIS_APPLICATION_ID: fbdfa6ea-8794-448f-b084-832ae3d61588
      CONFIG_SKAUTIS_TEST_MODE: true
      CONFIG_RECAPTCHA_SITE_KEY: 6LfQAuMZAAAAAL6xbQzujWRZDw-ivJmDF79ch5uQ
      CONFIG_RECAPTCHA_SECRET_KEY: ${{ secrets.SRS_CONFIG_RECAPTCHA_SECRET_KEY }}
      DEPLOY_DIRECTORY: '$HOME'
      DEPLOY_SSH_HOST: srs.skauting.cz
      DEPLOY_SSH_IP: 81.31.46.138
      DEPLOY_SSH_KEY: ${{ secrets.SRS_DEPLOY_SSH_KEY }}
      DEPLOY_SSH_PORT: 28
      DEPLOY_SSH_USERNAME: vu008925
    steps:
      - uses: actions/checkout@v2
      # Copy & paste from https://github.com/actions/cache/blob/master/examples.md#php---composer
      - name: Get composer cache
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install yarn
        run: |
          apt-get update
          apt-get install -y npm
          npm install --global yarn
      #Copy & paste from https://github.com/actions/cache/blob/master/examples.md#node---yarn
      - name: Get yarn cache
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Setup SSH key and deploy
        run: |
          mkdir -p /root/.ssh
          ssh-keyscan -H "${DEPLOY_SSH_HOST}","${DEPLOY_SSH_IP}" >> /root/.ssh/known_hosts
          eval `ssh-agent -s`
          echo "${DEPLOY_SSH_KEY}" | tr -d '\r' | ssh-add -
          phing deploy

  deploy-test-srs:
    name: "Deploy to test-srs.skauting.cz"
    runs-on: ubuntu-18.04
    container:
      image: fmasa/lebeda:8.0
    env:
      CONFIG_DATABASE_HOST: localhost
      CONFIG_DATABASE_NAME: db009903
      CONFIG_DATABASE_PASSWORD: ${{ secrets.TEST_SRS_CONFIG_DATABASE_PASSWORD }}
      CONFIG_DATABASE_USER: us009903
      CONFIG_MAIL_HOST:
      CONFIG_MAIL_PASSWORD:
      CONFIG_MAIL_PORT: 0
      CONFIG_MAIL_SECURE:
      CONFIG_MAIL_SMTP: false
      CONFIG_MAIL_USERNAME:
      CONFIG_SKAUTIS_APPLICATION_ID: cb35144d-2ab7-4106-80fb-6527594f9873
      CONFIG_SKAUTIS_TEST_MODE: true
      CONFIG_RECAPTCHA_SITE_KEY: 6LfQAuMZAAAAAL6xbQzujWRZDw-ivJmDF79ch5uQ
      CONFIG_RECAPTCHA_SECRET_KEY: ${{ secrets.TEST_SRS_CONFIG_RECAPTCHA_SECRET_KEY }}
      DEPLOY_DIRECTORY: '$HOME'
      DEPLOY_SSH_HOST: test-srs.skauting.cz
      DEPLOY_SSH_IP: 81.31.46.138
      DEPLOY_SSH_KEY: ${{ secrets.TEST_SRS_DEPLOY_SSH_KEY }}
      DEPLOY_SSH_PORT: 28
      DEPLOY_SSH_USERNAME: vu009903
    steps:
      - uses: actions/checkout@v2
      # Copy & paste from https://github.com/actions/cache/blob/master/examples.md#php---composer
      - name: Get composer cache
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install yarn
        run: |
          apt-get update
          apt-get install -y npm
          npm install --global yarn
      #Copy & paste from https://github.com/actions/cache/blob/master/examples.md#node---yarn
      - name: Get yarn cache
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Setup SSH key and deploy
        run: |
          mkdir -p /root/.ssh
          ssh-keyscan -H "${DEPLOY_SSH_HOST}","${DEPLOY_SSH_IP}" >> /root/.ssh/known_hosts
          eval `ssh-agent -s`
          echo "${DEPLOY_SSH_KEY}" | tr -d '\r' | ssh-add -
          phing deploy
