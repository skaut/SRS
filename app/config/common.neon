parameters:

application:
    errorPresenter: Error
    mapping:
        *: App\*Module\Presenters\*Presenter

session:
    expiration: 14 days

search:
    forms:
        in: %appDir%
        classes: App\**\Forms\*FormFactory

    components:
        in: %appDir%
        classes: App\**\Components\*ControlFactory

    services:
        in: %appDir%/Services
        classes:
            - *Service

    commands:
        in: %appDir%/Model
        classes: App\Model\*\Commands\Handlers\*Handler
        tags:
            messenger.messageHandler:
                bus: commandBus

    queries:
        in: %appDir%/Model
        classes: App\Model\*\Queries\Handlers\*Handler
        tags:
            messenger.messageHandler:
                bus: queryBus

    events:
        in: %appDir%/Model
        classes: App\Model\*\Events\Subscribers\*Listener
        tags:
            messenger.messageHandler:
                bus: eventBus

#        - class: App\Model\*\Events\Subscribers\*Listener
#          tags: [eventBus.subscriber]
#
#        - class: App\Model\*\Commands\Handlers\*Handler
#          tags: [commandBus.handler]
#
#        - class: App\Model\*\Queries\Handlers\*Handler
#          tags: [queryBus.handler]


services:
    - App\Router\RouterFactory
    router: @App\Router\RouterFactory::createRouter
    authenticator: App\Services\Authenticator
    console.application: Contributte\Console\Application
    -
        factory: Joseki\Application\Responses\PdfResponse
        setup:
            - $mpdfConfig([tempDir: %tempDir%/mpdf])

    - App\Services\Authorizator
    - App\Services\DatabaseService(%appDir%/..)
    - App\Services\FilesService(%wwwDir%/files)
    - App\Services\CommandBus(@messenger.commandBus.bus)
    - App\Services\QueryBus(@messenger.queryBus.bus)
    - App\Services\EventBus(@messenger.eventBus.bus)

    - App\ApiModule\Services\ScheduleService
    - App\Commands\ClearCacheCommand(%appDir%/..)
    - App\Utils\Validators

    permissionRepository:
        class: App\Model\Acl\Repositories\PermissionRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Acl\Permission)
    resourceRepository:
        class: App\Model\Acl\Repositories\SrsResourceRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Acl\SrsResource)
    roleRepository:
        class: App\Model\Acl\Repositories\RoleRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Acl\Role)
    applicationRepository:
        class: App\Model\Application\Repositories\ApplicationRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Application\Application)
    incomeProofRepository:
        class: App\Model\Application\Repositories\IncomeProofRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Application\IncomeProof)
    rolesApplicationRepository:
        class: App\Model\Application\Repositories\RolesApplicationRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Application\RolesApplication)
    subeventsApplicationRepository:
        class: App\Model\Application\Repositories\SubeventsApplicationRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Application\SubeventsApplication)
    variableSymbolRepository:
        class: App\Model\Application\Repositories\VariableSymbolRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Application\VariableSymbol)
    contentRepository:
        class: App\Model\Cms\Repositories\ContentRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Cms\Content)
    documentRepository:
        class: App\Model\Cms\Repositories\DocumentRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Cms\Document)
    faqRepository:
        class: App\Model\Cms\Repositories\FaqRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Cms\Faq)
    newsRepository:
        class: App\Model\Cms\Repositories\NewsRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Cms\News)
    pageRepository:
        class: App\Model\Cms\Repositories\PageRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Cms\Page)
    tagRepository:
        class: App\Model\Cms\Repositories\TagRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Cms\Tag)
    customInputRepository:
        class: App\Model\CustomInput\Repositories\CustomInputRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\CustomInput\CustomInput)
    customInputValueRepository:
        class: App\Model\CustomInput\Repositories\CustomInputValueRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\CustomInput\CustomInputValue)
    mailRepository:
        class: App\Model\Mailing\Repositories\MailRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Mailing\Mail)
    templateRepository:
        class: App\Model\Mailing\Repositories\TemplateRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Mailing\Template)
    paymentRepository:
        class: App\Model\Payment\Repositories\PaymentRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Payment\Payment)
    blockRepository:
        class: App\Model\Program\Repositories\BlockRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Program\Block)
    categoryRepository:
        class: App\Model\Program\Repositories\CategoryRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Program\Category)
    programApplicationRepository:
        class: App\Model\Program\Repositories\ProgramApplicationRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Program\ProgramApplication)
    programRepository:
        class: App\Model\Program\Repositories\ProgramRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Program\Program)
    roomRepository:
        class: App\Model\Program\Repositories\RoomRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Program\Room)
    placePointRepository:
        class: App\Model\Settings\Repositories\PlacePointRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Settings\PlacePoint)
    settingsRepository:
        class: App\Model\Settings\Repositories\SettingsRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Settings\Settings)
    skautIsCourseRepository:
        class: App\Model\SkautIs\Repositories\SkautIsCourseRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\SkautIs\SkautIsCourse)
    discountRepository:
        class: App\Model\Structure\Repositories\DiscountRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Structure\Discount)
    subeventRepository:
        class: App\Model\Structure\Repositories\SubeventRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\Structure\Subevent)
    userRepository:
        class: App\Model\User\Repositories\UserRepository
        factory: @Doctrine\ORM\EntityManagerInterface::getRepository(App\Model\User\User)

    pageFormFactory:
        factory: App\AdminModule\CmsModule\Forms\PageForm(%id%, %area%, ...)
        implement: App\AdminModule\CmsModule\Forms\IPageFormFactory
        parameters: [id, area]
    discountFormFactory:
        factory: App\AdminModule\ConfigurationModule\Forms\DiscountForm(%id%, ...)
        implement: App\AdminModule\ConfigurationModule\Forms\IDiscountFormFactory
        parameters: [id]

extensions:
    # Console
    console: Contributte\Console\DI\ConsoleExtension(%consoleMode%)

    # Common
    nettrine.annotations: Nettrine\Annotations\DI\AnnotationsExtension
    nettrine.cache: Nettrine\Cache\DI\CacheExtension
    nettrine.migrations: Nettrine\Migrations\DI\MigrationsExtension

    # DBAL
    nettrine.dbal: Nettrine\DBAL\DI\DbalExtension
    nettrine.dbal.console: Nettrine\DBAL\DI\DbalConsoleExtension

    # ORM
    nettrine.orm: Nettrine\ORM\DI\OrmExtension
    nettrine.orm.cache: Nettrine\ORM\DI\OrmCacheExtension
    nettrine.orm.console: Nettrine\ORM\DI\OrmConsoleExtension(%consoleMode%)
    nettrine.orm.annotations: Nettrine\ORM\DI\OrmAnnotationsExtension

    webloader: WebLoader\Nette\Extension
    skautis: Skautis\Nette\SkautisExtension
    translation: Contributte\Translation\DI\TranslationExtension
    mailing: Ublaboo\Mailing\DI\MailingExtension
    recaptcha: Contributte\ReCaptcha\DI\ReCaptchaExtension
    messenger: Fmasa\Messenger\DI\MessengerExtension

console:
    name: SRS
    catchExceptions: true
    autoExit: true
    lazy: false

nettrine.dbal:
    debug:
        panel: %debugMode%
    connection:
        charset: utf8mb4
        default_table_options:
            charset: utf8mb4
            collate: utf8mb4_unicode_ci

nettrine.orm:
    configuration:
        customStringFunctions:
            regexp: DoctrineExtensions\Query\Mysql\Regexp

nettrine.orm.annotations:
    mapping:
       App\Model: %appDir%/Model

nettrine.migrations:
    directory: %appDir%/../migrations

mailing:
    do: both
    logDirectory: '%appDir%/../log/mails'

translation:
    locales:
        whitelist: [cs]
        default: cs
        fallback: [cs]
    dirs:
        - %appDir%/lang

messenger:
    buses:
        commandBus:
        eventBus:
        queryBus:

latte:
    macros:
        - Nextras\FormsRendering\LatteMacros\Bs3InputMacros::install

webloader:
    css:
        web:
            files:
                - css/libs/jquery/jquery-ui.min.css
                - %appDir%/../vendor/twbs/bootstrap/dist/css/bootstrap.min.css
                - css/libs/font-awesome.min.css
                - css/libs/bootstrap-datetimepicker/bootstrap-datetimepicker.min.css
                - %appDir%/../vendor/snapappointments/bootstrap-select/dist/css/bootstrap-select.css
                - %appDir%/../vendor/kartik-v/bootstrap-fileinput/css/fileinput.min.css
                - css/libs/ublaboo-datagrid/happy.min.css
                - %appDir%/../vendor/ublaboo/datagrid/assets/datagrid.css
                - %appDir%/../vendor/ublaboo/datagrid/assets/datagrid-spinners.css
                - css/web/layout.css
                - css/web/style.css

        admin:
            files:
                - css/libs/jquery/jquery-ui.min.css
#                - libs/jquery/jquery.floatingscroll.css
                - %appDir%/../vendor/twbs/bootstrap/dist/css/bootstrap.min.css
                - css/libs/font-awesome.min.css
                - css/libs/bootstrap-datetimepicker/bootstrap-datetimepicker.min.css
                - %appDir%/../vendor/snapappointments/bootstrap-select/dist/css/bootstrap-select.css
                - %appDir%/../vendor/kartik-v/bootstrap-fileinput/css/fileinput.min.css
                - css/libs/ublaboo-datagrid/happy.min.css
                - %appDir%/../vendor/ublaboo/datagrid/assets/datagrid.css
                - %appDir%/../vendor/ublaboo/datagrid/assets/datagrid-spinners.css
                - css/admin/style.css

        install:
            files:
                - %appDir%/../vendor/twbs/bootstrap/dist/css/bootstrap.min.css
                - css/install/style.css

        export:
            files:
                - css/export/style.css

    js:
        web:
            files:
                - js/libs/jquery/jquery-3.4.1.min.js
                - js/libs/live-form-validation.js
                - js/libs/nette.ajax.js
                - js/libs/jquery/jquery-ui.min.js
                - js/libs/jquery/jquery.mousewheel.min.js
                - %appDir%/../vendor/twbs/bootstrap/dist/js/bootstrap.bundle.min.js
                - js/libs/moment/moment.js
                - js/libs/bootstrap-datetimepicker/bootstrap-datetimepicker.min.js
                - js/libs/bootstrap-datetimepicker/bootstrap-datetimepicker.cs.js
                - %appDir%/../vendor/snapappointments/bootstrap-select/dist/js/bootstrap-select.js
                - %appDir%/../vendor/snapappointments/bootstrap-select/dist/js/i18n/defaults-cs_CZ.js
                - js/libs/bootstrap-confirmation/bootstrap-confirmation.min.js
                - %appDir%/../vendor/kartik-v/bootstrap-fileinput/js/fileinput.min.js
                - %appDir%/../vendor/kartik-v/bootstrap-fileinput/themes/fa/theme.js
                - %appDir%/../vendor/kartik-v/bootstrap-fileinput/js/locales/cs.js
                - js/libs/ublaboo-datagrid/happy.min.js
#                - libs/ublaboo-datagrid/datagrid.js
                - %appDir%/../vendor/ublaboo/datagrid/assets/datagrid.js
                - %appDir%/../vendor/ublaboo/datagrid/assets/datagrid-instant-url-refresh.js
                - %appDir%/../vendor/ublaboo/datagrid/assets/datagrid-spinners.js
                - js/main.js

        admin:
            files:
                - js/libs/jquery/jquery-3.4.1.min.js
                - js/libs/live-form-validation.js
                - js/libs/nette.ajax.js
                - js/libs/jquery/jquery-ui.min.js
                - js/libs/jquery/jquery.mousewheel.min.js
#                - libs/jquery/jquery.floatingscroll.min.js
                - %appDir%/../vendor/twbs/bootstrap/dist/js/bootstrap.bundle.min.js
                - js/libs/moment/moment.js
                - js/libs/bootstrap-datetimepicker/bootstrap-datetimepicker.min.js
                - js/libs/bootstrap-datetimepicker/bootstrap-datetimepicker.cs.js
                - %appDir%/../vendor/snapappointments/bootstrap-select/dist/js/bootstrap-select.js
                - %appDir%/../vendor/snapappointments/bootstrap-select/dist/js/i18n/defaults-cs_CZ.js
                - js/libs/bootstrap-confirmation/bootstrap-confirmation.min.js
                - %appDir%/../vendor/kartik-v/bootstrap-fileinput/js/fileinput.min.js
                - %appDir%/../vendor/kartik-v/bootstrap-fileinput/themes/fa/theme.js
                - %appDir%/../vendor/kartik-v/bootstrap-fileinput/js/locales/cs.js
                - js/libs/ublaboo-datagrid/happy.min.js
#                - libs/ublaboo-datagrid/datagrid.js
                - %appDir%/../vendor/ublaboo/datagrid/assets/datagrid.js
                - %appDir%/../vendor/ublaboo/datagrid/assets/datagrid-instant-url-refresh.js
                - %appDir%/../vendor/ublaboo/datagrid/assets/datagrid-spinners.js
                - js/main.js

        install:
            files:
                - js/libs/jquery/jquery-3.4.1.min.js
                - %appDir%/../vendor/twbs/bootstrap/dist/js/bootstrap.bundle.min.js
